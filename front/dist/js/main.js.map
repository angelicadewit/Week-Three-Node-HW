{"version":3,"sources":["main.js"],"names":["console","log","showMessagesOnDOM","messages","messageUL","document","querySelector","messagesOnDOM","innerHTML","forEach","message","newMessage","createElement","user","moment","time","format","text","delButton","textContent","addEventListener","e","axios","delete","data","id","indexOf","then","response","index","removeChild","children","push","appendChild","messagesOnLoad","get","params","Date","setInterval","sendMessage","field","username","value","post","catch","error","key"],"mappings":";;AAAAA,QAAQC,GAAR;;AAIA;AACA;AACA;AACA;;;AAKA,IAAIC,oBAAoB,SAApBA,iBAAoB,CAASC,QAAT,EAAkB;AACtC;AACA,QAAIC,YAAYC,SAASC,aAAT,eAAhB;AACA,QAAIC,gBAAgB,EAApB;;AAEAH,cAAUI,SAAV;;AAEA;AACA;AACA;;AAEAL,aAASM,OAAT,CAAiB,UAASC,OAAT,EAAkB;AAC/B,YAAIC,aAAaN,SAASO,aAAT,MAAjB;;AAEAD,mBAAWH,SAAX,GAA0BE,QAAQG,IAAlC,UAA2CC,OAAOJ,QAAQK,IAAf,EAAqBC,MAArB,uBAA3C,WAAmGN,QAAQO,IAA3G;;AAEA,YAAIC,YAAYb,SAASO,aAAT,UAAhB;AACAM,kBAAUC,WAAV;AACAD,kBAAUE,gBAAV,UAAoC,UAASC,CAAT,EAAY;AAC5CC,kBAAMC,MAAN,kCAA8C,EAAEC,MAAM,EAAEC,IAAItB,SAASuB,OAAT,CAAiBhB,OAAjB,CAAN,EAAR,EAA9C,EACCiB,IADD,CACM,UAASC,QAAT,EAAmB;AACrB,oBAAIC,QAAQ1B,SAASuB,OAAT,CAAiBhB,OAAjB,CAAZ;AACAV,wBAAQC,GAAR,qBAAgC2B,QAAhC;AACAxB,0BAAU0B,WAAV,CAAsB1B,UAAU2B,QAAV,CAAmBF,KAAnB,CAAtB;AACH,aALD;AAMH,SAPD;;AASAtB,sBAAcyB,IAAd,CAAmBtB,OAAnB;;AAEAC,mBAAWsB,WAAX,CAAuBf,SAAvB;AACAd,kBAAU6B,WAAV,CAAsBtB,UAAtB;AAEH,KArBD;AAsBH,CAjCD;;AAmCA,IAAIuB,iBAAiB,SAAjBA,cAAiB,GAAU;AAC3BZ,UAAMa,GAAN,kCACA,EAAEC,QAAQ,EAAErB,MAAM,IAAIsB,IAAJ,EAAR,EAAV,EADA,EAGCV,IAHD,CAGM,UAASC,QAAT,EAAkB;AACxB1B,0BAAkB0B,SAASJ,IAA3B;AACC,KALD;AAMH,CAPD;;AASAc,YAAYJ,cAAZ,EAA4B,GAA5B;;AAGA,IAAIK,cAAc,SAAdA,WAAc,GAAU;AACxB,QAAIC,QAAQnC,SAASC,aAAT,+BAAZ;AACA,QAAImC,WAAWpC,SAASC,aAAT,4BAAf;;AAEA,uBAAkB;AACdN,gBAAQC,GAAR,oBAA+BuC,MAAME,KAArC;AACApB,cAAMqB,IAAN,kCAA2C;AACvC9B,kBAAM4B,SAASC,KADwB;AAEvCzB,kBAAMuB,MAAME,KAF2B;AAGvC3B,kBAAM,IAAIsB,IAAJ;AAHiC,SAA3C,EAKCV,IALD,CAKM,UAASC,QAAT,EAAmB;AACrBY,kBAAME,KAAN;AACA1C,oBAAQC,GAAR,qBAAgC2B,QAAhC;AACH,SARD,EASCgB,KATD,CASO,UAASC,KAAT,EAAgB;AACnB7C,oBAAQC,GAAR;AACH,SAXD;AAYH;AACJ,CAnBD;;AAuBAI,SAASC,aAAT,gBAAsCc,gBAAtC,UAAgEmB,WAAhE;AACAlC,SAASC,aAAT,gCAAoDc,gBAApD,aAAiF,UAAUC,CAAV,EAAa;AAC1F,QAAIA,EAAEyB,GAAF,YAAJ,EAAuB;AACrBP;AACD;AACJ,CAJD","file":"main.js","sourcesContent":["console.log(`Hello World from app.js! \nChange this message, and make sure it changes in the browser \nto verify that you're working in the right files.`)\n\n//user types, presses send, messages appears\n//user types, presses send, send message to server, message appears\n//user types, presses send, get message from field, send message to server, message appears\n//user types, presses send, get message from field, send message to server, [get message list from server, message appears]\n\n\n\n\nlet showMessagesOnDOM = function(messages){\n    // console.log(`here are your messages`, messages)\n    let messageUL = document.querySelector(`ul.messages`)\n    let messagesOnDOM = []\n\n    messageUL.innerHTML = ``\n\n    // while (messagesUL.children.length){\n    //     messagesUL.removeChild(messagesUL.children[0])\n    // }\n\n    messages.forEach(function(message) {\n        let newMessage = document.createElement(`li`)\n\n        newMessage.innerHTML = `${message.user} [${moment(message.time).format(`M-DD [at] h:mm:ss a`)}]: ${message.text} `\n\n        let delButton = document.createElement(`button`)\n        delButton.textContent = `delete`\n        delButton.addEventListener(`click`, function(e) {\n            axios.delete(`http://localhost:1337/message`, { data: { id: messages.indexOf(message) }})\n            .then(function(response) {\n                let index = messages.indexOf(message)\n                console.log(`server responded`, response)\n                messageUL.removeChild(messageUL.children[index])\n            })\n        })\n\n        messagesOnDOM.push(message)\n\n        newMessage.appendChild(delButton)\n        messageUL.appendChild(newMessage)\n\n    })\n}\n\nlet messagesOnLoad = function(){\n    axios.get(`http://localhost:1337/message`, \n    { params: { time: new Date() } }\n    )\n    .then(function(response){\n    showMessagesOnDOM(response.data)\n    })\n}\n\nsetInterval(messagesOnLoad, 500); \n\n\nlet sendMessage = function(){\n    let field = document.querySelector(`input[name=\"new-message\"]`)\n    let username = document.querySelector(`input[name=\"username\"]`)\n\n    if (`field.value`){\n        console.log(`send to server:`, field.value)\n        axios.post(`http://localhost:1337/message`,{\n            user: username.value,\n            text: field.value,\n            time: new Date(),\n        })\n        .then(function(response) {\n            field.value = ``\n            console.log(`server responded`, response)\n        })\n        .catch(function(error) {\n            console.log(`no message sent`)\n        })\n    }\n}\n\n\n\ndocument.querySelector(`button.send`).addEventListener(`click`, sendMessage)\ndocument.querySelector(`input[name=\"new-message\"]`).addEventListener(`keypress`, function (e) {\n    if (e.key === `Enter`) {\n      sendMessage()\n    }\n});"]}